<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.batch.mapper.SalesMapper">
    
    <!-- 結果マッピング -->
    <resultMap id="salesResultMap" type="com.example.batch.entity.Sales">
        <id property="id" column="id"/>
        <result property="transactionId" column="transaction_id"/>
        <result property="productCode" column="product_code"/>
        <result property="customerName" column="customer_name"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="saleDate" column="sale_date"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
    
    <!-- 全件取得 -->
    <select id="selectAll" resultMap="salesResultMap">
        SELECT * FROM sales ORDER BY id
    </select>
    
    <!-- ページング取得 -->
    <select id="selectWithPaging" resultMap="salesResultMap">
        SELECT * FROM sales 
        ORDER BY id
        LIMIT #{limit} OFFSET #{offset}
    </select>
    
    <!-- 取引IDで検索 -->
    <select id="selectByTransactionId" resultMap="salesResultMap">
        SELECT * FROM sales 
        WHERE transaction_id = #{transactionId}
    </select>
    
    <!-- 期間で検索 -->
    <select id="selectByDateRange" resultMap="salesResultMap">
        SELECT * FROM sales 
        WHERE sale_date BETWEEN #{startDate} AND #{endDate}
        ORDER BY sale_date
    </select>
    
    <!-- 登録 -->
    <insert id="insert" parameterType="com.example.batch.entity.Sales" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO sales (
            transaction_id, product_code, customer_name, quantity,
            unit_price, total_amount, sale_date, payment_method, status
        ) VALUES (
            #{transactionId}, #{productCode}, #{customerName}, #{quantity},
            #{unitPrice}, #{totalAmount}, #{saleDate}, #{paymentMethod}, #{status}
        )
    </insert>
    
    <!-- 更新 -->
    <update id="update" parameterType="com.example.batch.entity.Sales">
        UPDATE sales SET
            transaction_id = #{transactionId},
            product_code = #{productCode},
            customer_name = #{customerName},
            quantity = #{quantity},
            unit_price = #{unitPrice},
            total_amount = #{totalAmount},
            sale_date = #{saleDate},
            payment_method = #{paymentMethod},
            status = #{status},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>
    
    <!-- 削除 -->
    <delete id="delete">
        DELETE FROM sales WHERE id = #{id}
    </delete>
    
    <!-- 全件削除 -->
    <delete id="deleteAll">
        DELETE FROM sales
    </delete>
    
    <!-- 件数取得 -->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM sales
    </select>
</mapper>